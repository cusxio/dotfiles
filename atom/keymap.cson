# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'atom-text-editor.vim-mode-plus.insert-mode':
    'j k': 'vim-mode-plus:activate-normal-mode'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
    'g c': 'vim-mode-plus:toggle-line-comments'
    '[ b': 'pane:show-previous-recently-used-item'
    '] b': 'pane:show-next-recently-used-item'
    'space space': 'fuzzy-finder:toggle-file-finder'
    'space enter': 'fuzzy-finder:toggle-buffer-finder'
    'space f': 'project-find:show'

'atom-text-editor.vim-mode-plus.normal-mode':
    'S': 'vim-mode-plus:surround-smart-word'
    's': 'vim-mode-plus:surround'
    'y s': 'vim-mode-plus:surround'
    'd s': 'vim-mode-plus:delete-surround-any-pair'
    'd S': 'vim-mode-plus:delete-surround'
    'c s': 'vim-mode-plus:change-surround-any-pair'
    'c S': 'vim-mode-plus:change-surround'
    's w': 'vim-mode-plus:surround-word'
    's m': 'vim-mode-plus:map-surround'

'atom-text-editor.vim-mode-plus.operator-pending-mode.surround-pending':
    's': 'vim-mode-plus:inner-current-line'

'atom-text-editor.vim-mode-plus.visual-mode:not(.insert-mode)':
    'S': 'vim-mode-plus:surround'

# '.platform-darwin':
#     'space v': 'tree-view:toggle'

'.tree-view':
    'g g': 'core:move-to-top'
    'shift-g': 'core:move-to-bottom'


